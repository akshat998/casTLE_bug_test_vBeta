import os import argparseimport matplotlib.pyplot as plt from scipy.stats import pearsonrparser = argparse.ArgumentParser(description='Generate plots for output CSV generated from addCombo.py')parser.add_argument('csv_file', help='Location for output csv file, generated from addCombo.py ', type=str)args = parser.parse_args()def num_sign(x):     if x >= 0:         return 1    else:        return -1with open(args.csv_file, 'r') as f:     lines = f.readlines()lines = lines[1: ]# Plot: Combo casTLE Effect vs Combo casTLE Score: gene_names, combo_casTLE_effect, combo_casTLE_score = [], [], []casTLE_effect_1, casTLE_score_1, casTLE_effect_2, casTLE_score_2 = [], [], [], []for item in lines:         A = item.split(',')    combo_casTLE_score.append(float(A[-4]))    combo_casTLE_effect.append(float(A[-5]))    gene_names.append(A[1])        try:         num_1, num_2, num_3, num_4 = float(A[7]), float(A[8]), float(A[10]), float(A[11])        casTLE_effect_1.append(num_1)        casTLE_score_1.append(num_2)        casTLE_effect_2.append(num_3)        casTLE_score_2.append(num_4)    except:         continue    ax_1, ax_2 = [], []for i in range(len(casTLE_effect_1)):         sign_1 = num_sign(casTLE_effect_1[i])    ax_1.append(casTLE_score_1[i] * sign_1)        sign_2 = num_sign(casTLE_effect_2[i])    ax_2.append(casTLE_score_2[i] * sign_2)plt.plot(combo_casTLE_effect, combo_casTLE_score, '.')plt.xlabel('Combo casTLE Effect')plt.ylabel('Combo casTLE Score')plt.savefig('./volcano.png', dpi=400)plt.close()corr, _ = pearsonr(ax_1, ax_2)corr = round(float(corr), 3)plt.plot(ax_1, ax_2, '.')plt.xlabel('Signed casTLE Score 1')plt.ylabel('Signed casTLE Score 2')plt.title('Pearsons correlation: {}'.format(corr))plt.savefig('./correlation.png', dpi=400)